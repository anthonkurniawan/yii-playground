<?phpclass MYCActiveRecord extends CActiveRecord{		public function loadModel($id, $ajax=false)	{ 		$model= $this->model()->findByPk($id);			if($model===null){			if(Yii::app()->request->isAjaxRequest){				echo CJSON::encode( array(						'title' => 'ERROR..',						'status' => 'failure',						'content' => '<span class="txtAtt">'.Yii::t('yii','  request data with PK : {id} not found in {model} .', array('{id}'=>$id, '{model}'=>get_class($this))).'</span>'.											'<span class="res">check data on database manually</span>',					)); 					exit;			}else{				//throw new CHttpException(404,'The requested page {model} does not exist.', array('{model}'=>get_class($this)));				throw new CException( Yii::t('yii','  request data with PK : {id} not found in {model} .', array('{id}'=>$id, '{model}'=>get_class($this))) );			}		}		return $model;	}			# FOR USING TABLE, ARRAY DATA ETC BY "PK"	public function loadData($id=null, $cond=""){ 		/*$dataProvider=new CArrayDataProvider($model, array(			'pagination'=>array(				'pageSize'=>10,			),		)); */		#OR		/*$rawData=Yii::app()->db->createCommand("SELECT * FROM logs where id_user=$data->id")->queryAll(); */		#OR				$data =new CActiveDataProvider( get_class($this), array(			'criteria'=>array(				'select'=>'*',				//'with'=>'TblDatas',				'condition'=>$cond,   # 'id_user='.$id,   'id in ('.$arr.')'				// 'join'=>'JOIN tbl_data AS tu ON ( t.id = tu.id ) ',					//'order'=>'create_time DESC',				// 'limit'=>$limit,				// 'params'=>array(					// ':keyword'=>"$keyword%"				// )			),			// 'sort' => array(                    // 'attributes' => array(                       // 'catID', 'supID' //, item, price, type, modelID, itemDesc,                     // ),			// ),			// 'pagination'=>array(				// 'pageSize' => isset($_GET['pageSize']) ? $_GET['pageSize'] : 12,				// 'pageSize'=>5,			// ),		));			return $data;	}		#add solution safe query save ( selain pake db transaction ) 	#pake kalo mang ada kmungkinan terjadi salah alamat jika other user melakukan hal yg sama di satu waktu	 /*	 public function beforeSave() {        Yii::app()->db->createCommand('LOCK TABLE '.$this->tableName().' WRITE;')->execute();         return parent::beforeSave();    }    public function afterSave() {        Yii::app()->db->createCommand('UNLOCK TABLES;')->execute();         parent::beforeSave();    }	*/		public function getTopID($col)   	// bisa di panggil dengan 	{	   //$topId = new Products;	   $topId=$this->find(array(			//'condition'=>'type=:type',			//'params'=>array(':proID'=>$proID),     //'role=:role'			//'params'=>array(':proID'),   			'order'=>$col.' desc',		));		$topId=$topId->$col +1;		//echo"Top ID :".$topId;		//$topId=$topId->getOldPrimaryKey();		return $topId;	}		public function suggest($keyword, $order, $limit=20 )  	{		$criteria=array(			'condition'=>$order.' LIKE :keyword',			//'order'=>$order,			'limit'=>$limit,			'params'=>array(				':keyword'=>"$keyword%"			)		);		$models=$this->findAll($criteria);		$suggest=array();		foreach($models as $model) {			$suggest[] = array(				'value'=>$model->$order,				'label'=>$model->$order,			);		}		return $suggest;	}		public function suggestUsername($keyword, $limit=20)	{		$criteria=array(			'condition'=>'username LIKE :keyword',			'order'=>'username',			'limit'=>$limit,			'params'=>array(				':keyword'=>"$keyword%"			)		);		$models=$this->findAll($criteria);		$suggest=array();		foreach($models as $model) {				$suggest[] = array(					'value'=>$model->username,					'label'=>$model->username,				);		}		return $suggest;	}	/*** @return array for dropdown (attr1 => attr2)   contoh: Listdata dropdown role**/	public function getList_all()   // bisa di panggil dengan ($model->options) atau ($model->getOptions())	{		//return CHtml::listData($this->findAll(),'id','name');		return CHtml::listData($this->findAll(),'id','role');	}		//public function distinct() 	public function getList_distinct($param)   	// bisa di panggil dengan ($model->options) atau ($model->getOptions())	{		/*	$distinct=$model->findAll(array(			'select'=>'t.role',			'distinct'=>true,		));	*/		return CHtml::listData($this->findAll(),$param,$param);	}}?>